// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package protocol.scene
import _root_.scalapb.internal.compat.JavaConverters._

/** 结算
  *
  * @param itemData
  *  物品信息
  */
@SerialVersionUID(0L)
final case class SC10313(
    success: _root_.scala.Boolean,
    itemData: _root_.scala.Seq[protocol.scene.ItemData] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SC10313] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = success
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, __value)
      };
      itemData.foreach { __item =>
        val __value = __item
        __size += 1 + _root_.com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__value.serializedSize) + __value.serializedSize
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      
      {
        val __v = success
        _output__.writeBool(1, __v)
      };
      itemData.foreach { __v =>
        val __m = __v
        _output__.writeTag(2, 2)
        _output__.writeUInt32NoTag(__m.serializedSize)
        __m.writeTo(_output__)
      };
      unknownFields.writeTo(_output__)
    }
    def withSuccess(__v: _root_.scala.Boolean): SC10313 = copy(success = __v)
    def clearItemData = copy(itemData = _root_.scala.Seq.empty)
    def addItemData(__vs: protocol.scene.ItemData*): SC10313 = addAllItemData(__vs)
    def addAllItemData(__vs: Iterable[protocol.scene.ItemData]): SC10313 = copy(itemData = itemData ++ __vs)
    def withItemData(__v: _root_.scala.Seq[protocol.scene.ItemData]): SC10313 = copy(itemData = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => success
        case 2 => itemData
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PBoolean(success)
        case 2 => _root_.scalapb.descriptors.PRepeated(itemData.iterator.map(_.toPMessage).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = protocol.scene.SC10313
    // @@protoc_insertion_point(GeneratedMessage[protocol.SC10313])
}

object SC10313 extends scalapb.GeneratedMessageCompanion[protocol.scene.SC10313] with scalapb.HasBuilder[protocol.scene.SC10313] with scalapb.JavaProtoSupport[protocol.scene.SC10313, protocol.Scene.SC10313] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[protocol.scene.SC10313] with scalapb.HasBuilder[protocol.scene.SC10313] with scalapb.JavaProtoSupport[protocol.scene.SC10313, protocol.Scene.SC10313] = this
  def toJavaProto(scalaPbSource: protocol.scene.SC10313): protocol.Scene.SC10313 = {
    val javaPbOut = protocol.Scene.SC10313.newBuilder
    javaPbOut.setSuccess(scalaPbSource.success)
    javaPbOut.addAllItemData(_root_.scalapb.internal.compat.toIterable(scalaPbSource.itemData.iterator.map(protocol.scene.ItemData.toJavaProto(_))).asJava)
    javaPbOut.build
  }
  def fromJavaProto(javaPbSource: protocol.Scene.SC10313): protocol.scene.SC10313 = protocol.scene.SC10313(
    success = javaPbSource.getSuccess.booleanValue,
    itemData = javaPbSource.getItemDataList.asScala.iterator.map(protocol.scene.ItemData.fromJavaProto(_)).toSeq
  )
  def merge(`_message__`: protocol.scene.SC10313, `_input__`: _root_.com.google.protobuf.CodedInputStream): protocol.scene.SC10313 = newBuilder(_message__).merge(_input__).result()
  implicit def messageReads: _root_.scalapb.descriptors.Reads[protocol.scene.SC10313] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      protocol.scene.SC10313(
        success = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scala.Boolean],
        itemData = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[protocol.scene.ItemData]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = SceneProto.javaDescriptor.getMessageTypes().get(24)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = SceneProto.scalaDescriptor.messages(24)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = {
    var __out: _root_.scalapb.GeneratedMessageCompanion[_] = null
    (__number: @_root_.scala.unchecked) match {
      case 2 => __out = protocol.scene.ItemData
    }
    __out
  }
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = protocol.scene.SC10313(
    success = false,
    itemData = _root_.scala.Seq.empty
  )
  final class Builder private (
    private var __success: _root_.scala.Boolean,
    private val __itemData: _root_.scala.collection.immutable.VectorBuilder[protocol.scene.ItemData],
    private var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder
  ) extends _root_.scalapb.MessageBuilder[protocol.scene.SC10313] {
    private var __requiredFields0: _root_.scala.Long = 0x1L
    def merge(`_input__`: _root_.com.google.protobuf.CodedInputStream): this.type = {
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __success = _input__.readBool()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __itemData += _root_.scalapb.LiteParser.readMessage[protocol.scene.ItemData](_input__)
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      this
    }
    def result(): protocol.scene.SC10313 = {
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      protocol.scene.SC10313(
        success = __success,
        itemData = __itemData.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
  }
  object Builder extends _root_.scalapb.MessageBuilderCompanion[protocol.scene.SC10313, protocol.scene.SC10313.Builder] {
    def apply(): Builder = new Builder(
      __success = false,
      __itemData = new _root_.scala.collection.immutable.VectorBuilder[protocol.scene.ItemData],
      `_unknownFields__` = null
    )
    def apply(`_message__`: protocol.scene.SC10313): Builder = new Builder(
        __success = _message__.success,
        __itemData = new _root_.scala.collection.immutable.VectorBuilder[protocol.scene.ItemData] ++= _message__.itemData,
        `_unknownFields__` = new _root_.scalapb.UnknownFieldSet.Builder(_message__.unknownFields)
    )
  }
  def newBuilder: Builder = protocol.scene.SC10313.Builder()
  def newBuilder(`_message__`: protocol.scene.SC10313): Builder = protocol.scene.SC10313.Builder(_message__)
  implicit class SC10313Lens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, protocol.scene.SC10313]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, protocol.scene.SC10313](_l) {
    def success: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.success)((c_, f_) => c_.copy(success = f_))
    def itemData: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[protocol.scene.ItemData]] = field(_.itemData)((c_, f_) => c_.copy(itemData = f_))
  }
  final val SUCCESS_FIELD_NUMBER = 1
  final val ITEMDATA_FIELD_NUMBER = 2
  def of(
    success: _root_.scala.Boolean,
    itemData: _root_.scala.Seq[protocol.scene.ItemData]
  ): _root_.protocol.scene.SC10313 = _root_.protocol.scene.SC10313(
    success,
    itemData
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[protocol.SC10313])
}
