// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO2

package protocol.gm
import _root_.scalapb.internal.compat.JavaConverters._

/** 返回GM命令
  *
  * @param ok
  *   是否成功
  * @param details
  *   说明列表
  */
@SerialVersionUID(0L)
final case class SC10090(
    ok: _root_.scala.Boolean,
    details: _root_.scala.Seq[_root_.scala.Predef.String] = _root_.scala.Seq.empty,
    unknownFields: _root_.scalapb.UnknownFieldSet = _root_.scalapb.UnknownFieldSet.empty
    ) extends scalapb.GeneratedMessage with scalapb.lenses.Updatable[SC10090] {
    @transient
    private[this] var __serializedSizeCachedValue: _root_.scala.Int = 0
    private[this] def __computeSerializedValue(): _root_.scala.Int = {
      var __size = 0
      
      {
        val __value = ok
        __size += _root_.com.google.protobuf.CodedOutputStream.computeBoolSize(1, __value)
      };
      details.foreach { __item =>
        val __value = __item
        __size += _root_.com.google.protobuf.CodedOutputStream.computeStringSize(2, __value)
      }
      __size += unknownFields.serializedSize
      __size
    }
    override def serializedSize: _root_.scala.Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(`_output__`: _root_.com.google.protobuf.CodedOutputStream): _root_.scala.Unit = {
      
      {
        val __v = ok
        _output__.writeBool(1, __v)
      };
      details.foreach { __v =>
        val __m = __v
        _output__.writeString(2, __m)
      };
      unknownFields.writeTo(_output__)
    }
    def withOk(__v: _root_.scala.Boolean): SC10090 = copy(ok = __v)
    def clearDetails = copy(details = _root_.scala.Seq.empty)
    def addDetails(__vs: _root_.scala.Predef.String*): SC10090 = addAllDetails(__vs)
    def addAllDetails(__vs: Iterable[_root_.scala.Predef.String]): SC10090 = copy(details = details ++ __vs)
    def withDetails(__v: _root_.scala.Seq[_root_.scala.Predef.String]): SC10090 = copy(details = __v)
    def withUnknownFields(__v: _root_.scalapb.UnknownFieldSet) = copy(unknownFields = __v)
    def discardUnknownFields = copy(unknownFields = _root_.scalapb.UnknownFieldSet.empty)
    def getFieldByNumber(__fieldNumber: _root_.scala.Int): _root_.scala.Any = {
      (__fieldNumber: @_root_.scala.unchecked) match {
        case 1 => ok
        case 2 => details
      }
    }
    def getField(__field: _root_.scalapb.descriptors.FieldDescriptor): _root_.scalapb.descriptors.PValue = {
      _root_.scala.Predef.require(__field.containingMessage eq companion.scalaDescriptor)
      (__field.number: @_root_.scala.unchecked) match {
        case 1 => _root_.scalapb.descriptors.PBoolean(ok)
        case 2 => _root_.scalapb.descriptors.PRepeated(details.iterator.map(_root_.scalapb.descriptors.PString(_)).toVector)
      }
    }
    def toProtoString: _root_.scala.Predef.String = _root_.scalapb.TextFormat.printToUnicodeString(this)
    def companion = protocol.gm.SC10090
    // @@protoc_insertion_point(GeneratedMessage[protocol.SC10090])
}

object SC10090 extends scalapb.GeneratedMessageCompanion[protocol.gm.SC10090] with scalapb.HasBuilder[protocol.gm.SC10090] with scalapb.JavaProtoSupport[protocol.gm.SC10090, protocol.Gm.SC10090] {
  implicit def messageCompanion: scalapb.GeneratedMessageCompanion[protocol.gm.SC10090] with scalapb.HasBuilder[protocol.gm.SC10090] with scalapb.JavaProtoSupport[protocol.gm.SC10090, protocol.Gm.SC10090] = this
  def toJavaProto(scalaPbSource: protocol.gm.SC10090): protocol.Gm.SC10090 = {
    val javaPbOut = protocol.Gm.SC10090.newBuilder
    javaPbOut.setOk(scalaPbSource.ok)
    javaPbOut.addAllDetails(scalaPbSource.details.asJava)
    javaPbOut.build
  }
  def fromJavaProto(javaPbSource: protocol.Gm.SC10090): protocol.gm.SC10090 = protocol.gm.SC10090(
    ok = javaPbSource.getOk.booleanValue,
    details = javaPbSource.getDetailsList.asScala.iterator.map(_root_.scala.Predef.identity).toSeq
  )
  def merge(`_message__`: protocol.gm.SC10090, `_input__`: _root_.com.google.protobuf.CodedInputStream): protocol.gm.SC10090 = newBuilder(_message__).merge(_input__).result()
  implicit def messageReads: _root_.scalapb.descriptors.Reads[protocol.gm.SC10090] = _root_.scalapb.descriptors.Reads{
    case _root_.scalapb.descriptors.PMessage(__fieldsMap) =>
      _root_.scala.Predef.require(__fieldsMap.keys.forall(_.containingMessage == scalaDescriptor), "FieldDescriptor does not match message type.")
      protocol.gm.SC10090(
        ok = __fieldsMap.get(scalaDescriptor.findFieldByNumber(1).get).get.as[_root_.scala.Boolean],
        details = __fieldsMap.get(scalaDescriptor.findFieldByNumber(2).get).map(_.as[_root_.scala.Seq[_root_.scala.Predef.String]]).getOrElse(_root_.scala.Seq.empty)
      )
    case _ => throw new RuntimeException("Expected PMessage")
  }
  def javaDescriptor: _root_.com.google.protobuf.Descriptors.Descriptor = GmProto.javaDescriptor.getMessageTypes().get(1)
  def scalaDescriptor: _root_.scalapb.descriptors.Descriptor = GmProto.scalaDescriptor.messages(1)
  def messageCompanionForFieldNumber(__number: _root_.scala.Int): _root_.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__number)
  lazy val nestedMessagesCompanions: Seq[_root_.scalapb.GeneratedMessageCompanion[_ <: _root_.scalapb.GeneratedMessage]] = Seq.empty
  def enumCompanionForFieldNumber(__fieldNumber: _root_.scala.Int): _root_.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__fieldNumber)
  lazy val defaultInstance = protocol.gm.SC10090(
    ok = false,
    details = _root_.scala.Seq.empty
  )
  final class Builder private (
    private var __ok: _root_.scala.Boolean,
    private val __details: _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String],
    private var `_unknownFields__`: _root_.scalapb.UnknownFieldSet.Builder
  ) extends _root_.scalapb.MessageBuilder[protocol.gm.SC10090] {
    private var __requiredFields0: _root_.scala.Long = 0x1L
    def merge(`_input__`: _root_.com.google.protobuf.CodedInputStream): this.type = {
      var _done__ = false
      while (!_done__) {
        val _tag__ = _input__.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 8 =>
            __ok = _input__.readBool()
            __requiredFields0 &= 0xfffffffffffffffeL
          case 18 =>
            __details += _input__.readStringRequireUtf8()
          case tag =>
            if (_unknownFields__ == null) {
              _unknownFields__ = new _root_.scalapb.UnknownFieldSet.Builder()
            }
            _unknownFields__.parseField(tag, _input__)
        }
      }
      this
    }
    def result(): protocol.gm.SC10090 = {
      if (__requiredFields0 != 0L) { throw new _root_.com.google.protobuf.InvalidProtocolBufferException("Message missing required fields.") } 
      protocol.gm.SC10090(
        ok = __ok,
        details = __details.result(),
        unknownFields = if (_unknownFields__ == null) _root_.scalapb.UnknownFieldSet.empty else _unknownFields__.result()
      )
    }
  }
  object Builder extends _root_.scalapb.MessageBuilderCompanion[protocol.gm.SC10090, protocol.gm.SC10090.Builder] {
    def apply(): Builder = new Builder(
      __ok = false,
      __details = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String],
      `_unknownFields__` = null
    )
    def apply(`_message__`: protocol.gm.SC10090): Builder = new Builder(
        __ok = _message__.ok,
        __details = new _root_.scala.collection.immutable.VectorBuilder[_root_.scala.Predef.String] ++= _message__.details,
        `_unknownFields__` = new _root_.scalapb.UnknownFieldSet.Builder(_message__.unknownFields)
    )
  }
  def newBuilder: Builder = protocol.gm.SC10090.Builder()
  def newBuilder(`_message__`: protocol.gm.SC10090): Builder = protocol.gm.SC10090.Builder(_message__)
  implicit class SC10090Lens[UpperPB](_l: _root_.scalapb.lenses.Lens[UpperPB, protocol.gm.SC10090]) extends _root_.scalapb.lenses.ObjectLens[UpperPB, protocol.gm.SC10090](_l) {
    def ok: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Boolean] = field(_.ok)((c_, f_) => c_.copy(ok = f_))
    def details: _root_.scalapb.lenses.Lens[UpperPB, _root_.scala.Seq[_root_.scala.Predef.String]] = field(_.details)((c_, f_) => c_.copy(details = f_))
  }
  final val OK_FIELD_NUMBER = 1
  final val DETAILS_FIELD_NUMBER = 2
  def of(
    ok: _root_.scala.Boolean,
    details: _root_.scala.Seq[_root_.scala.Predef.String]
  ): _root_.protocol.gm.SC10090 = _root_.protocol.gm.SC10090(
    ok,
    details
  )
  // @@protoc_insertion_point(GeneratedMessageCompanion[protocol.SC10090])
}
